<?xml version="1.0" encoding="UTF-8"?>
<!-- 기본 namespace를 security로 지정 -->
<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-4.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd">

	<!-- #9.2. bcryptPasswordEncoder빈 등록 -->
	<beans:bean id="bcryptPasswordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"/>

	<!-- #9.4. 인증/권한 설정 -->
	<!-- static 자원은 security filter 처리하지 않음 -->
	<http security="none" pattern="/resources/**"/>
	
	<!-- 순서대로 처리되기 때문에 특별한 것은 선치할 것! -->
	<http auto-config="true">
		<intercept-url pattern="/" access="permitAll"/>
		<intercept-url pattern="/index.jsp" access="permitAll"/>
		<intercept-url pattern="/admin/**" access="hasRole('ADMIN')"/>
		<intercept-url pattern="/member/memberEnroll.do" access="isAnonymous()"/>
		<intercept-url pattern="/member/memberLogin.do" access="isAnonymous()"/>
		<intercept-url pattern="/member/checkIdDuplicate.do" access="isAnonymous()"/>
		<intercept-url pattern="/board/boardList.do" access="permitAll"/>
		<intercept-url pattern="/board/boardDetail.do" access="permitAll"/>
		
		<intercept-url pattern="/**" access="isAuthenticated()"/>
		
		<!-- 
			login-page : GET방식 로그인 폼페이지 요청(핸들러 작성 필요)
			login-processing-url : POST방식 로그인 처리 요청(핸들러 작성 불필요)
			username-parameter/password-parameter : 변수명을 변경해주고 싶으면 작성. 일치할 경우 생략 가능!
		-->
		<form-login
			login-page="/member/memberLogin.do"
			login-processing-url="/member/memberLogin.do"
			username-parameter="memberId"
			password-parameter="password"/>
		<!--  
			logout-url : POST방식 logout 요청(핸들러 작성 불필요)
		-->
		<logout 
			logout-url="/member/memberLogout.do"
			logout-success-url="/"/>
		
		<!--  
			csrf : cross site request forgery 공격(악성코드를 통해 권한 있는 사용자의 폼 제출 유도)
				- disabled : csrf 공격 대비 기능 사용 안 함(true)
				- 모든 POST방식의 폼 제출에 csrf 공격 대비 토큰 검증
		-->
		<csrf disabled="false"/>
	</http>
	
	<authentication-manager>
		<!-- 
		<authentication-provider>
			<password-encoder ref="bcryptPasswordEncoder"/>
			<user-service>
				<user 
					name="honggd"
					password="$2a$10$oDUuqgA16JOHn39iSwq.GeIYzPvj5MyjlA01buPbC6K.ikxFobXGi"
				 	authorities="ROLE_USER"/>
				<user 
					name="sinsa"
					password="$2a$10$oDUuqgA16JOHn39iSwq.GeIYzPvj5MyjlA01buPbC6K.ikxFobXGi"
				 	authorities="ROLE_USER, ROLE_ADMIN"/>
			</user-service>	
		</authentication-provider> 
		-->
		<authentication-provider user-service-ref="securityService">
			<password-encoder ref="bcryptPasswordEncoder"/>
		</authentication-provider>
	</authentication-manager>
	
	<!-- servlet-context와 별개로 작성 -->
	<context:component-scan base-package="com.kh.security" />
	
</beans:beans>
